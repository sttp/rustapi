(function() {var implementors = {
"sttp":[["impl Freeze for <a class=\"struct\" href=\"sttp/struct.Config.html\" title=\"struct sttp::Config\">Config</a>",1,["sttp::config::Config"]],["impl Freeze for <a class=\"struct\" href=\"sttp/struct.Settings.html\" title=\"struct sttp::Settings\">Settings</a>",1,["sttp::settings::Settings"]],["impl Freeze for <a class=\"struct\" href=\"sttp/struct.Ticks.html\" title=\"struct sttp::Ticks\">Ticks</a>",1,["sttp::ticks::Ticks"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.Defaults.html\" title=\"struct sttp::transport::Defaults\">Defaults</a>",1,["sttp::transport::constants::Defaults"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.StateFlags.html\" title=\"struct sttp::transport::StateFlags\">StateFlags</a>",1,["sttp::transport::constants::StateFlags"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.DataPacketFlags.html\" title=\"struct sttp::transport::DataPacketFlags\">DataPacketFlags</a>",1,["sttp::transport::constants::DataPacketFlags"]],["impl Freeze for <a class=\"enum\" href=\"sttp/transport/enum.ServerCommand.html\" title=\"enum sttp::transport::ServerCommand\">ServerCommand</a>",1,["sttp::transport::constants::ServerCommand"]],["impl Freeze for <a class=\"enum\" href=\"sttp/transport/enum.ServerResponse.html\" title=\"enum sttp::transport::ServerResponse\">ServerResponse</a>",1,["sttp::transport::constants::ServerResponse"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.OperationalModes.html\" title=\"struct sttp::transport::OperationalModes\">OperationalModes</a>",1,["sttp::transport::constants::OperationalModes"]],["impl Freeze for <a class=\"enum\" href=\"sttp/transport/enum.OperationalEncoding.html\" title=\"enum sttp::transport::OperationalEncoding\">OperationalEncoding</a>",1,["sttp::transport::constants::OperationalEncoding"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.CompressionModes.html\" title=\"struct sttp::transport::CompressionModes\">CompressionModes</a>",1,["sttp::transport::constants::CompressionModes"]],["impl Freeze for <a class=\"enum\" href=\"sttp/transport/enum.SecurityMode.html\" title=\"enum sttp::transport::SecurityMode\">SecurityMode</a>",1,["sttp::transport::constants::SecurityMode"]],["impl Freeze for <a class=\"enum\" href=\"sttp/transport/enum.ConnectStatus.html\" title=\"enum sttp::transport::ConnectStatus\">ConnectStatus</a>",1,["sttp::transport::constants::ConnectStatus"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.Measurement.html\" title=\"struct sttp::transport::Measurement\">Measurement</a>",1,["sttp::transport::measurement::Measurement"]],["impl Freeze for <a class=\"struct\" href=\"sttp/transport/struct.SignalIndexCache.html\" title=\"struct sttp::transport::SignalIndexCache\">SignalIndexCache</a>",1,["sttp::transport::signal_index_cache::SignalIndexCache"]],["impl Freeze for <a class=\"struct\" href=\"sttp/struct.Subscriber.html\" title=\"struct sttp::Subscriber\">Subscriber</a>",1,["sttp::Subscriber"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()